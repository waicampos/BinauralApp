<?php
/**
 * Model object generated by: Skipper (http://www.skipper18.com)
 * Do not modify this file manually.
 */

namespace App\Models\AbstractModels;

use Illuminate\Database\Eloquent\Model;

/**
* Class AbstractGroup
* @package App\Models\AbstractModels
*
* @property smallInteger $id
* @property tinyInteger $number
* @property string $name
* @property text $description
* @property tinyInteger $max_members
* @property \Carbon\Carbon $hour
* @property \Carbon\Carbon $created_at
* @property \Carbon\Carbon $updated_at
* @property tinyInteger $project_id
* @property tinyInteger $weekday_id
* @property tinyInteger $status_id
* @property \App\Models\project $project
* @property \App\Models\weekday $weekday
* @property \App\Models\status $status
* @property \Illuminate\Database\Eloquent\Collection $workshops
*/ 
abstract class AbstractGroup extends Model
{
    /**  
     * The attributes that should be cast to native types.
     * 
     * @var array
     */
    protected $casts = [
        'id' => 'integer',
        'number' => 'integer',
        'name' => 'string',
        'description' => 'string',
        'max_members' => 'integer',
        'created_at' => 'datetime',
        'updated_at' => 'datetime',
        'project_id' => 'integer',
        'weekday_id' => 'integer',
        'status_id' => 'integer'
    ];
    
    public function project()
    {
        return $this->belongsTo('\App\Models\project', 'project_id', 'id');
    }
    
    public function weekday()
    {
        return $this->belongsTo('\App\Models\weekday', 'weekday_id', 'id');
    }
    
    public function status()
    {
        return $this->belongsTo('\App\Models\status', 'status_id', 'id');
    }
    
    public function workshops()
    {
        return $this->hasMany('\App\Models\workshop', 'group_id', 'id');
    }
    
    public function media()
    {
        return $this->belongsToMany('\App\Models\media', 'group_media', 'group_id', 'media_id');
    }
    
    public function nonWorkingPeriods()
    {
        return $this->belongsToMany('\App\Models\nonWorkingPeriod', 'group_non_working_period', 'group_id', 'non_working_period_id');
    }
    
    public function users()
    {
        return $this->belongsToMany('\App\Models\user', 'group_member', 'group_id', 'user_id')->withPivot('id', 'authorization', 'city', 'phone_number', 'preferred_hour', 'weekday_id');
    }
    
    public function questionaires()
    {
        return $this->belongsToMany('\App\Models\questionaire', 'group_questionaire', 'group_id', 'questionaire_id')->withPivot('id');
    }
    
    public function indicators()
    {
        return $this->belongsToMany('\App\Models\indicator', 'group_indicator', 'group_id', 'indicator_id');
    }
}
