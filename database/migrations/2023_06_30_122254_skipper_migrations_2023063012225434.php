<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: 39506b03-fd3a-40aa-b226-1b23df92c30f
 * Migration local datetime: 2023-06-30 12:22:54.340586
 * Migration UTC datetime: 2023-06-30 15:22:54.340586
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations2023063012225434 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned();
            $table->string('firstname', 255);
            $table->string('lastname', 255);
            $table->boolean('has_social_name');
            $table->date('birth_date');
            $table->string('cpf', 15)->unique();
            $table->string('email', 255)->unique();
            $table->string('password', 255);
            $table->dateTime('email_verified_at')->nullable(true);
            $table->string('remember_token', 255)->nullable(true);
            $table->timestamp('created_at');
            $table->timestamp('updated_at');
            $table->tinyInteger('category_id');
            $table->tinyInteger('civil_state_id')->unsigned();
            $table->tinyInteger('status_id')->unsigned();
            $table->unique(['cpf'], 'CPF');
        });
        Schema::create('categories', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement();
            $table->string('name', 15)->unique();
        });
        Schema::create('status', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 50)->unique();
        });
        Schema::create('projects', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 50);
            $table->string('description', 300);
            $table->string('contact', 300);
            $table->date('starts_at');
            $table->date('ends_at');
            $table->timestamp('created_at');
            $table->timestamp('updated_at');
            $table->tinyInteger('status_id')->unsigned();
        });
        Schema::create('groups', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->tinyInteger('number');
            $table->string('name', 30);
            $table->text('description');
            $table->tinyInteger('max_members');
            $table->time('hour');
            $table->timestamp('created_at');
            $table->timestamp('updated_at');
            $table->tinyInteger('project_id')->unsigned();
            $table->tinyInteger('weekday_id')->unsigned();
            $table->tinyInteger('status_id')->unsigned();
            $table->unique(['number'], 'numero_projeto');
        });
        Schema::create('media', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 30)->unique();
            $table->string('description', 200);
            $table->string('url', 200)->unique();
            $table->tinyInteger('media_type_id')->unsigned();
        });
        Schema::create('files', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 100);
            $table->string('url', 200);
            $table->timestamp('created_at');
            $table->timestamp('updated_at');
            $table->tinyInteger('project_id')->unsigned();
            $table->tinyInteger('file_type_id')->unsigned();
            $table->tinyInteger('status_id')->unsigned();
        });
        Schema::create('file_types', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 30)->unique();
        });
        Schema::create('roles', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 15)->unique();
        });
        Schema::create('playlists', function (Blueprint $table) {
            $table->string('uri', 200);
            $table->timestamp('updated_at');
            $table->integer('user_id')->unique()->unsigned();
        });
        Schema::create('eegs', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->string('url', 255)->unique();
            $table->date('collected_at_date');
            $table->time('collected_at_time');
            $table->smallInteger('group_member_id')->unsigned();
        });
        Schema::create('social_names', function (Blueprint $table) {
            $table->integer('user_id')->unsigned();
            $table->string('firstname', 255);
            $table->string('lastname', 255);
            $table->primary(['user_id']);
        });
        Schema::create('indicators', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 30);
        });
        Schema::create('options', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 50);
            $table->tinyInteger('indicator_id')->unsigned();
        });
        Schema::create('scalable_sensations', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('sensacao', 500);
        });
        Schema::create('feelings', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('sentimento', 200);
        });
        Schema::create('member_workshops', function (Blueprint $table) {
            $table->mediumInteger('id')->autoIncrement()->unsigned();
            $table->time('inicio');
            $table->time('fim');
            $table->boolean('interrupcao');
            $table->timestamp('created_at');
            $table->smallInteger('participante_grupo_id');
        });
        Schema::create('non_working_periods', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->date('start_date');
            $table->date('end_date');
            $table->tinyInteger('reason_id')->unsigned();
        });
        Schema::create('non_working_reasons', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 20);
        });
        Schema::create('wokshop_statuses', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 20);
        });
        Schema::create('workshops', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->tinyInteger('workshop_num');
            $table->date('date');
            $table->time('time');
            $table->timestamp('created_at');
            $table->timestamp('updated_at');
            $table->smallInteger('group_id')->unsigned();
            $table->tinyInteger('wokshop_status_id')->unsigned();
        });
        Schema::create('responsible_adults', function (Blueprint $table) {
            $table->string('fullname', 300);
            $table->string('phone_number', 30);
            $table->smallInteger('group_member_id')->unique()->unsigned();
        });
        Schema::create('weekdays', function (Blueprint $table) {
            $table->tinyInteger('id')->unsigned();
            $table->string('name', 15)->unique();
            $table->primary(['id']);
        });
        Schema::create('civil_states', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 15)->unique();
        });
        Schema::create('tlces', function (Blueprint $table) {
            $table->string('url', 200);
            $table->timestamp('sent_at');
            $table->smallInteger('group_member_id')->unique()->unsigned();
        });
        Schema::create('withdraws', function (Blueprint $table) {
            $table->date('left_at');
            $table->tinyInteger('withdraw_reason_id')->unsigned();
            $table->smallInteger('group_member_id')->unique()->unsigned();
        });
        Schema::create('withdraw_reasons', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 255);
        });
        Schema::create('worshop_sensations', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->tinyInteger('escala');
        });
        Schema::create('configs', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 30)->unique();
            $table->string('value', 50);
        });
        Schema::create('updates', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 100)->nullable(true);
            $table->string('description', 300)->nullable(true);
            $table->dateTime('inserted_at')->nullable(true);
        });
        Schema::create('long_questionaires', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 30);
            $table->tinyInteger('workshop_interval')->unsigned();
        });
        Schema::create('questionaires', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 30);
            $table->string('default_question', 200);
            $table->tinyInteger('default_interval');
            $table->dateTime('updated_at');
        });
        Schema::create('sessao_apps', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('dados_user_apps', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('project_team', function (Blueprint $table) {
            $table->tinyInteger('project_id')->unsigned();
            $table->integer('user_id')->unsigned();
            $table->tinyInteger('role_id')->unsigned();
            $table->date('start_at');
            $table->date('finish_at');
            $table->primary(['project_id','user_id']);
        });
        Schema::create('media_types', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 50);
        });
        Schema::create('group_media', function (Blueprint $table) {
            $table->tinyInteger('media_id')->unsigned();
            $table->smallInteger('group_id')->unsigned();
            $table->primary(['media_id','group_id']);
        });
        Schema::create('group_non_working_period', function (Blueprint $table) {
            $table->tinyInteger('non_working_period_id')->unsigned();
            $table->smallInteger('group_id')->unsigned();
            $table->primary(['non_working_period_id','group_id']);
        });
        Schema::create('group_member', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->smallInteger('group_id')->unsigned();
            $table->integer('user_id')->unsigned();
            $table->boolean('authorization');
            $table->string('city', 100);
            $table->string('phone_number', 20);
            $table->time('preferred_hour');
            $table->tinyInteger('weekday_id')->unsigned();
        });
        Schema::create('user_indicator_outros', function (Blueprint $table) {
            $table->integer('user_indicator_id')->unsigned();
            $table->string('answer', 255);
            $table->primary(['user_indicator_id']);
        });
        Schema::create('group_questionaire', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->tinyInteger('questionaire_id')->unsigned();
            $table->smallInteger('group_id')->unsigned();
        });
        Schema::create('group_member_workshop', function (Blueprint $table) {
            $table->smallInteger('id')->autoIncrement()->unsigned();
            $table->smallInteger('workshop_id')->unsigned();
            $table->smallInteger('group_member_id')->unsigned();
            $table->date('attended_at');
            $table->time('started_at');
            $table->time('finished_at');
            $table->smallInteger('total_seconds_interrupted');
        });
        Schema::create('group_indicator', function (Blueprint $table) {
            $table->tinyInteger('indicator_id')->unsigned();
            $table->smallInteger('group_id')->unsigned();
            $table->primary(['indicator_id','group_id']);
        });
        Schema::create('user_indicators', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned();
            $table->integer('user_id')->unsigned();
            $table->tinyInteger('option_id')->unsigned();
            $table->tinyInteger('indicator_id')->unsigned();
        });
        Schema::create('group_member_indicators', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned();
            $table->smallInteger('group_member_id')->unsigned();
            $table->tinyInteger('indicator_id')->unsigned();
            $table->tinyInteger('option_id')->unsigned();
        });
        Schema::create('group_member_indicator_outros', function (Blueprint $table) {
            $table->integer('group_member_indicator_id')->unsigned();
            $table->string('answer', 255);
            $table->primary(['group_member_indicator_id']);
        });
        Schema::create('apps', function (Blueprint $table) {
            $table->tinyInteger('id')->autoIncrement()->unsigned();
            $table->string('name', 255);
            $table->string('version', 255);
        });
        Schema::create('app_indicator', function (Blueprint $table) {
            $table->tinyInteger('indicator_id')->unsigned();
            $table->tinyInteger('app_id')->unsigned();
            $table->primary(['indicator_id','app_id']);
        });
        Schema::table('users', function (Blueprint $table) {
            $table->foreign('category_id')->references('id')->on('categories');
        });
        Schema::table('users', function (Blueprint $table) {
            $table->foreign('civil_state_id')->references('id')->on('civil_states');
        });
        Schema::table('users', function (Blueprint $table) {
            $table->foreign('status_id')->references('id')->on('status')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('projects', function (Blueprint $table) {
            $table->foreign('status_id')->references('id')->on('status')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('groups', function (Blueprint $table) {
            $table->foreign('project_id')->references('id')->on('projects')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('groups', function (Blueprint $table) {
            $table->foreign('weekday_id')->references('id')->on('weekdays')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('groups', function (Blueprint $table) {
            $table->foreign('status_id')->references('id')->on('status')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('media', function (Blueprint $table) {
            $table->foreign('media_type_id')->references('id')->on('media_types')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('files', function (Blueprint $table) {
            $table->foreign('project_id')->references('id')->on('projects')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('files', function (Blueprint $table) {
            $table->foreign('file_type_id')->references('id')->on('file_types')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('files', function (Blueprint $table) {
            $table->foreign('status_id')->references('id')->on('status')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('playlists', function (Blueprint $table) {
            $table->foreign('user_id')->references('id')->on('users');
        });
        Schema::table('eegs', function (Blueprint $table) {
            $table->foreign('group_member_id')->references('id')->on('group_member')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('social_names', function (Blueprint $table) {
            $table->foreign('user_id')->references('id')->on('users');
        });
        Schema::table('options', function (Blueprint $table) {
            $table->foreign('indicator_id')->references('id')->on('indicators')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('non_working_periods', function (Blueprint $table) {
            $table->foreign('reason_id')->references('id')->on('non_working_reasons')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('workshops', function (Blueprint $table) {
            $table->foreign('group_id')->references('id')->on('groups')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('workshops', function (Blueprint $table) {
            $table->foreign('wokshop_status_id')->references('id')->on('wokshop_statuses')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('responsible_adults', function (Blueprint $table) {
            $table->foreign('group_member_id')->references('id')->on('group_member')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('tlces', function (Blueprint $table) {
            $table->foreign('group_member_id')->references('id')->on('group_member')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('withdraws', function (Blueprint $table) {
            $table->foreign('withdraw_reason_id')->references('id')->on('withdraw_reasons')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('withdraws', function (Blueprint $table) {
            $table->foreign('group_member_id')->references('id')->on('group_member')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('project_team', function (Blueprint $table) {
            $table->foreign('role_id')->references('id')->on('roles')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_member', function (Blueprint $table) {
            $table->foreign('weekday_id')->references('id')->on('weekdays')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('user_indicator_outros', function (Blueprint $table) {
            $table->foreign('user_indicator_id')->references('id')->on('user_indicators')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('user_indicators', function (Blueprint $table) {
            $table->foreign('user_id')->references('id')->on('users')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('user_indicators', function (Blueprint $table) {
            $table->foreign('option_id')->references('id')->on('options')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('user_indicators', function (Blueprint $table) {
            $table->foreign('indicator_id')->references('id')->on('indicators')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('group_member_indicators', function (Blueprint $table) {
            $table->foreign('group_member_id')->references('id')->on('group_member')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_member_indicators', function (Blueprint $table) {
            $table->foreign('indicator_id')->references('id')->on('indicators')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('group_member_indicators', function (Blueprint $table) {
            $table->foreign('option_id')->references('id')->on('options')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('group_member_indicator_outros', function (Blueprint $table) {
            $table->foreign('group_member_indicator_id')->references('id')->on('group_member_indicators')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('project_team', function (Blueprint $table) {
            $table->foreign('project_id')->references('id')->on('projects')->onDelete('restrict')->onUpdate('restrict');
            $table->foreign('user_id')->references('id')->on('users')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_media', function (Blueprint $table) {
            $table->foreign('media_id')->references('id')->on('media')->onDelete('restrict')->onUpdate('restrict');
            $table->foreign('group_id')->references('id')->on('groups')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_non_working_period', function (Blueprint $table) {
            $table->foreign('non_working_period_id')->references('id')->on('non_working_periods')->onDelete('restrict')->onUpdate('restrict');
            $table->foreign('group_id')->references('id')->on('groups')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_member', function (Blueprint $table) {
            $table->foreign('group_id')->references('id')->on('groups')->onDelete('restrict')->onUpdate('restrict');
            $table->foreign('user_id')->references('id')->on('users')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_questionaire', function (Blueprint $table) {
            $table->foreign('questionaire_id')->references('id')->on('questionaires')->onDelete('restrict')->onUpdate('restrict');
            $table->foreign('group_id')->references('id')->on('groups')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_member_workshop', function (Blueprint $table) {
            $table->foreign('workshop_id')->references('id')->on('workshops')->onDelete('restrict')->onUpdate('restrict');
            $table->foreign('group_member_id')->references('id')->on('group_member')->onDelete('restrict')->onUpdate('restrict');
        });
        Schema::table('group_indicator', function (Blueprint $table) {
            $table->foreign('indicator_id')->references('id')->on('indicators');
            $table->foreign('group_id')->references('id')->on('groups');
        });
        Schema::table('app_indicator', function (Blueprint $table) {
            $table->foreign('indicator_id')->references('id')->on('indicators');
            $table->foreign('app_id')->references('id')->on('apps');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::table('app_indicator', function (Blueprint $table) {
            $table->dropForeign(['indicator_id']);
            $table->dropForeign(['app_id']);
        });
        Schema::table('group_indicator', function (Blueprint $table) {
            $table->dropForeign(['indicator_id']);
            $table->dropForeign(['group_id']);
        });
        Schema::table('group_member_workshop', function (Blueprint $table) {
            $table->dropForeign(['workshop_id']);
            $table->dropForeign(['group_member_id']);
        });
        Schema::table('group_questionaire', function (Blueprint $table) {
            $table->dropForeign(['questionaire_id']);
            $table->dropForeign(['group_id']);
        });
        Schema::table('group_member', function (Blueprint $table) {
            $table->dropForeign(['group_id']);
            $table->dropForeign(['user_id']);
        });
        Schema::table('group_non_working_period', function (Blueprint $table) {
            $table->dropForeign(['non_working_period_id']);
            $table->dropForeign(['group_id']);
        });
        Schema::table('group_media', function (Blueprint $table) {
            $table->dropForeign(['media_id']);
            $table->dropForeign(['group_id']);
        });
        Schema::table('project_team', function (Blueprint $table) {
            $table->dropForeign(['project_id']);
            $table->dropForeign(['user_id']);
        });
        if (Schema::hasTable('group_member_indicator_outros')) {
            Schema::table('group_member_indicator_outros', function (Blueprint $table) {
                $table->dropForeign(['group_member_indicator_id']);
            });
        }
        if (Schema::hasTable('group_member_indicators')) {
            Schema::table('group_member_indicators', function (Blueprint $table) {
                $table->dropForeign(['option_id']);
            });
        }
        if (Schema::hasTable('group_member_indicators')) {
            Schema::table('group_member_indicators', function (Blueprint $table) {
                $table->dropForeign(['indicator_id']);
            });
        }
        if (Schema::hasTable('group_member_indicators')) {
            Schema::table('group_member_indicators', function (Blueprint $table) {
                $table->dropForeign(['group_member_id']);
            });
        }
        if (Schema::hasTable('user_indicators')) {
            Schema::table('user_indicators', function (Blueprint $table) {
                $table->dropForeign(['indicator_id']);
            });
        }
        if (Schema::hasTable('user_indicators')) {
            Schema::table('user_indicators', function (Blueprint $table) {
                $table->dropForeign(['option_id']);
            });
        }
        if (Schema::hasTable('user_indicators')) {
            Schema::table('user_indicators', function (Blueprint $table) {
                $table->dropForeign(['user_id']);
            });
        }
        if (Schema::hasTable('user_indicator_outros')) {
            Schema::table('user_indicator_outros', function (Blueprint $table) {
                $table->dropForeign(['user_indicator_id']);
            });
        }
        if (Schema::hasTable('group_member')) {
            Schema::table('group_member', function (Blueprint $table) {
                $table->dropForeign(['weekday_id']);
            });
        }
        if (Schema::hasTable('project_team')) {
            Schema::table('project_team', function (Blueprint $table) {
                $table->dropForeign(['role_id']);
            });
        }
        if (Schema::hasTable('withdraws')) {
            Schema::table('withdraws', function (Blueprint $table) {
                $table->dropForeign(['group_member_id']);
            });
        }
        if (Schema::hasTable('withdraws')) {
            Schema::table('withdraws', function (Blueprint $table) {
                $table->dropForeign(['withdraw_reason_id']);
            });
        }
        if (Schema::hasTable('tlces')) {
            Schema::table('tlces', function (Blueprint $table) {
                $table->dropForeign(['group_member_id']);
            });
        }
        if (Schema::hasTable('responsible_adults')) {
            Schema::table('responsible_adults', function (Blueprint $table) {
                $table->dropForeign(['group_member_id']);
            });
        }
        if (Schema::hasTable('workshops')) {
            Schema::table('workshops', function (Blueprint $table) {
                $table->dropForeign(['wokshop_status_id']);
            });
        }
        if (Schema::hasTable('workshops')) {
            Schema::table('workshops', function (Blueprint $table) {
                $table->dropForeign(['group_id']);
            });
        }
        if (Schema::hasTable('non_working_periods')) {
            Schema::table('non_working_periods', function (Blueprint $table) {
                $table->dropForeign(['reason_id']);
            });
        }
        if (Schema::hasTable('options')) {
            Schema::table('options', function (Blueprint $table) {
                $table->dropForeign(['indicator_id']);
            });
        }
        if (Schema::hasTable('social_names')) {
            Schema::table('social_names', function (Blueprint $table) {
                $table->dropForeign(['user_id']);
            });
        }
        if (Schema::hasTable('eegs')) {
            Schema::table('eegs', function (Blueprint $table) {
                $table->dropForeign(['group_member_id']);
            });
        }
        if (Schema::hasTable('playlists')) {
            Schema::table('playlists', function (Blueprint $table) {
                $table->dropForeign(['user_id']);
            });
        }
        if (Schema::hasTable('files')) {
            Schema::table('files', function (Blueprint $table) {
                $table->dropForeign(['status_id']);
            });
        }
        if (Schema::hasTable('files')) {
            Schema::table('files', function (Blueprint $table) {
                $table->dropForeign(['file_type_id']);
            });
        }
        if (Schema::hasTable('files')) {
            Schema::table('files', function (Blueprint $table) {
                $table->dropForeign(['project_id']);
            });
        }
        if (Schema::hasTable('media')) {
            Schema::table('media', function (Blueprint $table) {
                $table->dropForeign(['media_type_id']);
            });
        }
        if (Schema::hasTable('groups')) {
            Schema::table('groups', function (Blueprint $table) {
                $table->dropForeign(['status_id']);
            });
        }
        if (Schema::hasTable('groups')) {
            Schema::table('groups', function (Blueprint $table) {
                $table->dropForeign(['weekday_id']);
            });
        }
        if (Schema::hasTable('groups')) {
            Schema::table('groups', function (Blueprint $table) {
                $table->dropForeign(['project_id']);
            });
        }
        if (Schema::hasTable('projects')) {
            Schema::table('projects', function (Blueprint $table) {
                $table->dropForeign(['status_id']);
            });
        }
        if (Schema::hasTable('users')) {
            Schema::table('users', function (Blueprint $table) {
                $table->dropForeign(['status_id']);
            });
        }
        if (Schema::hasTable('users')) {
            Schema::table('users', function (Blueprint $table) {
                $table->dropForeign(['civil_state_id']);
            });
        }
        if (Schema::hasTable('users')) {
            Schema::table('users', function (Blueprint $table) {
                $table->dropForeign(['category_id']);
            });
        }
        Schema::dropIfExists('app_indicator');
        Schema::dropIfExists('apps');
        Schema::dropIfExists('group_member_indicator_outros');
        Schema::dropIfExists('group_member_indicators');
        Schema::dropIfExists('user_indicators');
        Schema::dropIfExists('group_indicator');
        Schema::dropIfExists('group_member_workshop');
        Schema::dropIfExists('group_questionaire');
        Schema::dropIfExists('user_indicator_outros');
        Schema::dropIfExists('group_member');
        Schema::dropIfExists('group_non_working_period');
        Schema::dropIfExists('group_media');
        Schema::dropIfExists('media_types');
        Schema::dropIfExists('project_team');
        Schema::dropIfExists('dados_user_apps');
        Schema::dropIfExists('sessao_apps');
        Schema::dropIfExists('questionaires');
        Schema::dropIfExists('long_questionaires');
        Schema::dropIfExists('updates');
        Schema::dropIfExists('configs');
        Schema::dropIfExists('worshop_sensations');
        Schema::dropIfExists('withdraw_reasons');
        Schema::dropIfExists('withdraws');
        Schema::dropIfExists('tlces');
        Schema::dropIfExists('civil_states');
        Schema::dropIfExists('weekdays');
        Schema::dropIfExists('responsible_adults');
        Schema::dropIfExists('workshops');
        Schema::dropIfExists('wokshop_statuses');
        Schema::dropIfExists('non_working_reasons');
        Schema::dropIfExists('non_working_periods');
        Schema::dropIfExists('member_workshops');
        Schema::dropIfExists('feelings');
        Schema::dropIfExists('scalable_sensations');
        Schema::dropIfExists('options');
        Schema::dropIfExists('indicators');
        Schema::dropIfExists('social_names');
        Schema::dropIfExists('eegs');
        Schema::dropIfExists('playlists');
        Schema::dropIfExists('roles');
        Schema::dropIfExists('file_types');
        Schema::dropIfExists('files');
        Schema::dropIfExists('media');
        Schema::dropIfExists('groups');
        Schema::dropIfExists('projects');
        Schema::dropIfExists('status');
        Schema::dropIfExists('categories');
        Schema::dropIfExists('users');
    }
}
